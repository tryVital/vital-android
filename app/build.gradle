plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp' version "$ksp"
}

android {
    compileSdk 34

    namespace 'io.tryvital.sample'

    defaultConfig {
        applicationId "io.tryvital.sample"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs = ['-Xjvm-default=enable']
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "$compose_compiler"
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
            freeCompilerArgs += "-P"
            freeCompilerArgs += "plugin:androidx.compose.compiler.plugins.kotlin:suppressKotlinVersionCompatibilityCheck=true"
            jvmTarget = JavaVersion.VERSION_1_8.toString()
        }
    }
}

dependencies {
    ksp "com.squareup.moshi:moshi-kotlin-codegen:$moshi"

    implementation project(':VitalClient')
    implementation project(':VitalDevices')
    implementation project(':VitalHealthConnect')

    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:$desugar_jdk_libs")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin"

    implementation "com.squareup.moshi:moshi:$moshi"
    implementation "com.squareup.moshi:moshi-adapters:$moshi"

    implementation "androidx.core:core-ktx:$core"
    implementation "androidx.navigation:navigation-compose:$nav"
    implementation "androidx.compose.ui:ui:$compose"
    implementation "androidx.compose.material3:material3:$material3"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose"
    implementation "androidx.compose.material:material-icons-extended:$compose"
    implementation "androidx.activity:activity:$activity_compose"
    implementation "androidx.activity:activity-compose:$activity_compose"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_viewmodel_compose"
    implementation "androidx.work:work-runtime:2.3.1"
    implementation "androidx.health.connect:connect-client:$health_connect"
    implementation "io.coil-kt:coil-compose:${coil_compose}"
    implementation "androidx.startup:startup-runtime:1.1.1"

    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$test_ext"
    androidTestImplementation "androidx.test.espresso:espresso-core:$test_espresso"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose"
}

tasks.withType(PublishToMavenRepository).configureEach { enabled = false }
tasks.withType(PublishToMavenLocal).configureEach { enabled = false }
